import { Message, Event } from 'grey-message';

class History extends Message {

    private static _instance: History;

    constructor() {
        super();
    }

    public static get instance(): History {
        if (!History._instance) {
            History._instance = new History();
        }
        return History._instance;
    }

    /**
     * 跳转到制定地址
     * @param path 地址
     * @param state 状态
     */
    public push(path: string, state?: any) {
        const pathArr = path.split('?');
        this.send(new CutoverEvent(pathArr[0], pathArr[1], state));
        history.replaceState(state, null as any, path);
    }
}

/** 切换路由事件 */
export class CutoverEvent extends Event {

    public static TYPE: string = Message.createType('CutoverEvent');

    /** 当前路由 */
    public pathname: string;

    /** 当前状态 */
    public state: any;

    /** 路由参数 */
    public search: string;

    constructor(pathname: string, search: string, state?: any) {
        super(CutoverEvent.TYPE);
        this.pathname = pathname;
        this.state = state;
        this.search = search;
    }
}

export default History.instance;